{"ast":null,"code":"import _classCallCheck from \"/Users/Sudan/Desktop/all-react-projects/motion-planner/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Sudan/Desktop/all-react-projects/motion-planner/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Sudan/Desktop/all-react-projects/motion-planner/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Sudan/Desktop/all-react-projects/motion-planner/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Sudan/Desktop/all-react-projects/motion-planner/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Sudan/Desktop/all-react-projects/motion-planner/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n/* Change Square to be a Function Component */\n\nfunction Square(props) {\n  var _this = this;\n\n  var divStyle = {\n    background: 'white'\n  };\n  return React.createElement(\"button\", {\n    className: \"square\",\n    style: divStyle,\n    onClick: function onClick() {\n      props.onClick();\n      _this.divStyle.background = 'green';\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, props.value);\n}\n\nvar Board =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Board, _React$Component);\n\n  /* Lifting State into Parent instead of Child */\n  function Board(props) {\n    var _this2;\n\n    _classCallCheck(this, Board);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Board).call(this, props));\n    _this2.state = {\n      squares: Array(400).fill(null)\n    };\n    return _this2;\n  }\n\n  _createClass(Board, [{\n    key: \"handleClick\",\n    value: function handleClick(i) {\n      /* Create a copy of our squares array to make it immutable */\n      var squares = this.state.squares.slice();\n      squares[i] = 'C';\n      this.setState({\n        squares: squares\n      });\n      /* If someone has won or if that square is already selected, do nothing when Square is clicked*/\n    }\n  }, {\n    key: \"renderSquare\",\n    value: function renderSquare(i) {\n      var _this3 = this;\n\n      return React.createElement(Square, {\n        key: i,\n        value: this.state.squares[i]\n        /* Pass in onClick function into Square */\n        ,\n        onClick: function onClick() {\n          return _this3.handleClick(i);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"callChildren\",\n    value: function callChildren(start, end) {\n      var children = [];\n\n      for (var i = start; i < end; i++) {\n        children.push(this.renderSquare(i));\n      }\n\n      return children;\n    }\n  }, {\n    key: \"createGrid\",\n    value: function createGrid(size) {\n      var grid = [];\n      var counter = 0;\n\n      for (var i = 0; i < size; i++) {\n        grid.push(React.createElement(\"div\", {\n          className: \"board-row\",\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, this.callChildren(counter, counter + size)));\n        counter += size;\n      }\n\n      return grid;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, this.createGrid(Math.sqrt(this.state.squares.length)));\n    }\n  }]);\n\n  return Board;\n}(React.Component);\n\nvar Game =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Game, _React$Component2);\n\n  function Game() {\n    _classCallCheck(this, Game);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Game).apply(this, arguments));\n  }\n\n  _createClass(Game, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"game-board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Board:\", React.createElement(Board, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"game-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(\"ol\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Game;\n}(React.Component); // ========================================\n\n\nReactDOM.render(React.createElement(Game, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 106\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/Sudan/Desktop/all-react-projects/motion-planner/src/index.js"],"names":["React","ReactDOM","Square","props","divStyle","background","onClick","value","Board","state","squares","Array","fill","i","slice","setState","handleClick","start","end","children","push","renderSquare","size","grid","counter","callChildren","createGrid","Math","sqrt","length","Component","Game","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n/* Change Square to be a Function Component */\nfunction Square(props) {\n      let divStyle = {\n        background: 'white'\n      }\n      return (\n        <button className=\"square\" style={divStyle} onClick={() => {\n          props.onClick();\n          this.divStyle.background = 'green';\n        }}>\n          {props.value}\n        </button>\n      );\n  }\n  \n  class Board extends React.Component {\n\n    /* Lifting State into Parent instead of Child */\n    constructor(props) {\n        super(props);\n        this.state = {\n            squares: Array(400).fill(null),\n        };\n    }\n    handleClick(i) {\n        /* Create a copy of our squares array to make it immutable */ \n        const squares = this.state.squares.slice();\n        squares[i] = 'C';\n        this.setState({squares: squares});\n        /* If someone has won or if that square is already selected, do nothing when Square is clicked*/\n    }\n    renderSquare(i) {\n      return <Square key={i} value={this.state.squares[i]}\n      /* Pass in onClick function into Square */\n      onClick={() => this.handleClick(i)}\n      />;\n    }\n    callChildren(start, end) {\n      let children = [];\n      for (let i = start; i < end; i++) {\n        children.push(this.renderSquare(i));\n      }\n      return children;\n    }\n    createGrid(size) {\n      let grid = []\n      let counter = 0;\n      for (let i = 0; i < size; i++) {\n        \n        grid.push(<div className=\"board-row\" key={i}>{this.callChildren(counter, counter + size)}</div>)\n        counter += size;\n      }\n      return grid;\n    }\n  \n    render() {\n  \n      return (\n        <div>\n          {this.createGrid(Math.sqrt(this.state.squares.length))}\n          {/* <div className=\"board-row\">\n            {this.renderSquare(0)}\n            {this.renderSquare(1)}\n            {this.renderSquare(2)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(3)}\n            {this.renderSquare(4)}\n            {this.renderSquare(5)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(6)}\n            {this.renderSquare(7)}\n            {this.renderSquare(8)}\n          </div> */}\n        </div>\n      );\n    }\n  }\n  \n  class Game extends React.Component {\n    render() {\n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n          Board:\n            <Board />\n          </div>\n          <div className=\"game-info\">\n            <div>{/* status */}</div>\n            <ol>{/* TODO */}</ol>\n          </div>\n        </div>\n      );\n    }\n  }\n\n  \n  // ========================================\n  \n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );\n  "]},"metadata":{},"sourceType":"module"}